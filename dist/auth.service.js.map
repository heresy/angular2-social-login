{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["../src/auth.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Observer } from \"rxjs/Observer\";\n\ndeclare let gapi: any;\ndeclare let IN: any;\ndeclare let FB: any;\n\nexport interface IProvider {\n    clientId: string;\n    apiVersion?: string;\n}\n\nexport interface IProviders {\n    [provider: string]: IProvider;\n}\n\n@Injectable()\nexport class AuthService {\n    gauth: any;\n    \n    login(provider: string): Observable<Object>{\n        return Observable.create(\n            (observer: Observer<Object>) => {\n                switch(provider){\n                    case \"google\":\n                                    if (typeof(this.gauth) == \"undefined\"){\n                                        this.gauth = gapi.auth2.getAuthInstance();\n                                    }\n                                    if(!this.gauth.isSignedIn.get()){\n                                        this.gauth.signIn().then(() => {\n                                            localStorage.setItem('_login_provider', 'google');\n                                            observer.next(this._fetchGoogleUserDetails());\n                                            observer.complete();\n                                        });\n                                    }else{\n                                        localStorage.setItem('_login_provider', 'google');\n                                        observer.next(this._fetchGoogleUserDetails());\n                                        observer.complete();\n                                    }\n                                    \n                                    break;\n                    case \"facebook\":\n                                    FB.getLoginStatus((response: any) => {\n                                        if(response.status === \"connected\"){\n                                            FB.api('/me?fields=name,email,picture', (res: any) => {\n                                                if(!res || res.error){\n                                                    observer.error(res.error);\n                                                }else{\n                                                    let userDetails = {\n                                                        name: res.name, \n                                                        email: res.email, \n                                                        uid: res.id, \n                                                        provider: \"facebook\", \n                                                        image: res.picture.data.url,\n                                                        token: response.authResponse.accessToken\n                                                    }\n                                                    localStorage.setItem('_login_provider', 'facebook');\n                                                    observer.next(userDetails);\n                                                    observer.complete();\n                                                }\n                                            });\n                                        }\n                                        else{\n                                            FB.login((response: any) => {\n                                                if(response.status === \"connected\"){\n                                                    FB.api('/me?fields=name,email,picture', (res: any) => {\n                                                        if(!res || res.error){\n                                                            observer.error(res.error);\n                                                        }else{\n                                                            let userDetails = {\n                                                                name: res.name, \n                                                                email: res.email, \n                                                                uid: res.id, \n                                                                provider: \"facebook\", \n                                                                image: res.picture.data.url,\n                                                                token: response.authResponse.accessToken\n                                                            }\n                                                            localStorage.setItem('_login_provider', 'facebook');\n                                                            observer.next(userDetails);\n                                                            observer.complete();\n                                                        }\n                                                    });\n                                                }\n                                            }, {scope: 'email', auth_type: \"rerequest\"});\n                                        }\n                                    });\n                                    break;\n                    case \"linkedin\":\n                                    IN.User.authorize(function(){\n                                        IN.API.Raw(\"/people/~:(id,first-name,last-name,email-address,picture-url)\").result(function(res: any){\n                                            let userDetails = {name: res.firstName + \" \" + res.lastName, email: res.emailAddress, uid: res.id, provider: \"linkedIN\", image: res.pictureUrl};\n                                            localStorage.setItem('_login_provider', 'linkedin');\n                                            observer.next(userDetails);\n                                            observer.complete();\n                                        });\n                                    });\n                                    break;\n                }\n            }\n        )\n    }\n\n    logout(): Observable<boolean>{\n        let provider = localStorage.getItem(\"_login_provider\");\n        return Observable.create((observer: any) => {\n            switch(provider){\n                case \"google\":\n                                let gElement = document.getElementById(\"gSignout\");\n                                if (typeof(gElement) != 'undefined' && gElement != null)\n                                {\n                                    gElement.remove();\n                                }\n                                let d = document, gSignout;\n                                let ref: any = d.getElementsByTagName('script')[0];\n                                gSignout = d.createElement('script');\n                                gSignout.src = \"https://accounts.google.com/Logout\";\n                                gSignout.type = \"text/html\";\n                                gSignout.id = \"gSignout\";\n                                localStorage.removeItem('_login_provider');\n                                observer.next(true);\n                                observer.complete();\n                                ref.parentNode.insertBefore(gSignout, ref);\n                                break;\n                case \"facebook\":\n                                FB.logout(function(res: any){\n                                    localStorage.removeItem('_login_provider');\n                                    observer.next(true);\n                                    observer.complete();\n                                });\n                                break;\n                case \"linkedin\":\n                                IN.User.logout(function(){\n                                    localStorage.removeItem('_login_provider');\n                                    observer.next(true);\n                                    observer.complete();\n                  \t\t\t\t}, {});\n                                break;\n            }\n        })\n    }\n\n    private _fetchGoogleUserDetails(){\n        let currentUser = this.gauth.currentUser.get();\n        let profile = currentUser.getBasicProfile();\n        let idToken = currentUser.getAuthResponse().id_token;\n        let accessToken = currentUser.getAuthResponse().access_token;\n        return {\n            token: accessToken,\n            idToken: idToken,\n            uid: profile.getId(),\n            name: profile.getName(),\n            email: profile.getEmail(),\n            image: profile.getImageUrl(),\n            provider: \"google\"\n        };\n    }\n}"]}